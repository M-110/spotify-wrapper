---
# 1. AlbumObject
# 
- name: Album
  doc: "Album Object Doc String."
  attrs:
    - name: album_type
      doc: "The type of the album: album, single, or compilation."
      return: str
      
    - name: artists
      doc: "The artists of the album. Each artist object includes a link in href to more detailed information about the artist."
      return: List[str]
      
    - name: available_markets
      doc: "The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market."
      return: List[str]
      
    - name: copyrights
      doc: "The copyright statements of the album."
      return: List[ArtistObject]
      
    - name: external_ids
      doc: "Known external IDs for the album."
      return: ExternalIdObject
      
    - name: external_urls
      doc: "Known external URLs for this album."
      return: ExternalUrlObject
      
    - name: genres
      doc: 'A list of the genres used to classify the album. For example: “Prog Rock” , “Post-Grunge”. (If not yet classified, the array is empty.)'
      return: List[str]     
      
    - name: href
      doc: "A link to the Web API endpoint providing full details of the album."
      return: str
      
    - name: id
      doc: "The Spotify ID for the album."
      return: str
      
    - name: images
      doc: "The cover art for the album in various sizes, widest first."
      return: List[ImageObject]
      
    - name: label
      doc: "The label for the album."
      return: str
      
    - name: name
      doc: "The name of the album. In case of an album takedown, the value may be an empty string."
      return: str    
      
    - name: popularity
      doc: "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated from the popularity of the album’s individual tracks."
      return: int
      
    - name: release_date
      doc: "The date the album was first released, for example “1981-12-15”. Depending on the precision, it might be shown as “1981” or “1981-12”."
      return: str      
      
    - name: release_data_precision
      doc: 'The precision with which release_date value is known: “year”, “month”, or “day”.'
      return: str
      
    - name: restrictions
      doc: "Included in the response when a content restriction is applied. See Restriction Object for more details."
      return: AlbumRestrictionObject   
      
    - name: tracks
      doc: "The tracks of the album."
      return: PagingObject[SimplifiedTrackObject]
      
    - name: type
      doc: 'The object type: “album”.'
      return: str      
      
    - name: uri
      doc: "The Spotify URI for the album."
      return: str

# 2. AlbumRestrictionObject
# TODO: What does this look like??
- name: AlbumRestrictionObject
  doc: "Album Restriction Object docstring..."
  attrs:
    - name: reason
      doc: "The reason for the restriction. Supported values:
               \n    market - The content item is not available in the given market.
               \n    product - The content item is not available for the user’s subscription type.
               \n    explicit - The content item is explicit and the user’s account is set to not play explicit content.
            \n\nAdditional reasons may be added in the future."
      return: str
      
      
# 3. ArtistObject
# 
- name: Artist
  doc: "Artist docstring"
  attrs:
    - name: external_urls
      doc: "The type of the album: album, single, or compilation."
      return: str
      
    - name: followers
      doc: "The artists of the album. Each artist object includes a link in href to more detailed information about the artist."
      return: List[str]
      
    - name: genres
      doc: "The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market."
      return: List[str]
      
    - name: href
      doc: "The copyright statements of the album."
      return: List[ArtistObject]
      
    - name: id
      doc: "Known external IDs for the album."
      return: ExternalIdObject
      
    - name: images
      doc: "Known external URLs for this album."
      return: ExternalUrlObject
      
    - name: name
      doc: 'A list of the genres used to classify the album. For example: “Prog Rock” , “Post-Grunge”. (If not yet classified, the array is empty.)'
      return: List[str]     
      
    - name: popularity
      doc: "A link to the Web API endpoint providing full details of the album."
      return: str
      
    - name: type
      doc: "The Spotify ID for the album."
      return: str
      
    - name: uri
      doc: "The cover art for the album in various sizes, widest first."
      return: List[ImageObject]
      
      
# 4. AudioFeaturesObject
# 
- name: AudioFeatures
  doc: "AudioFeatures docstring.."
  attrs:
    - name: acousticness
      doc: "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic."
      return: float
      
    - name: analysis_url
      doc: "An HTTP URL to access the full audio analysis of this track. An access token is required to access this data."
      return: str
      
    - name: danceability
      doc: "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable."
      return: float
      
    - name: duration_ms
      doc: "The duration of the track in milliseconds."
      return: int
      
    - name: energy
      doc: "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy."
      return: float
      
    - name: id
      doc: "The Spotify ID for the track."
      return: string
      
    - name: instrumentalness
      doc: 'Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.)'
      return: int    
      
    - name: key
      doc: "The key the track is in. Integers map to pitches using standard Pitch Class notation . E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on."
      return: int

    - name: liveness
      doc: "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live."
      return: float

    - name: loudness
      doc: "The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db."
      return: float
      
    - name: mode
      doc: "Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0."
      return: int

    - name: speechiness
      doc: "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks."
      return: float
      
    - name: tempo
      doc: 'The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.'
      return: float    
      
    - name: time_signature
      doc: "An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure)."
      return: int
      
    - name: track_href
      doc: "A link to the Web API endpoint providing full details of the track."
      return: str
      
    - name: type
      doc: 'The object type: “audio_features”'
      return: str
      
    - name: uri
      doc: "The Spotify URI for the track."
      return: str

    - name: valence
      doc: "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)."
      return: float

# 5. CategoryObject
# 
- name: Category
  doc: "CategoryObject doc string...."
  attrs:
    - name: href
      doc: "A link to the Web API endpoint returning full details of the category."
      return: str
      
    - name: icons
      doc: "The category icon, in various sizes."
      return: List[ImageObject]
      
    - name: id
      doc: "The Spotify category ID of the category."
      return: str
      
    - name: name
      doc: "The name of the category."
      return: str

# 6. ContextObject
# 
- name: Context
  doc: "ContextObject doc string...."
  attrs:
    - name: external_urls
      doc: "External URLs for this context."
      return: ExternalUrlObject
      
    - name: href
      doc: "A link to the Web API endpoint providing full details of the track."
      return: str

    - name: type
      doc: 'The object type, e.g. “artist”, “playlist”, “album”, “show”.'
      return: str
      
    - name: uri
      doc: "The Spotify URI for the context."
      return: str
        
        
# 7. CopyrightObject
# 
- name: Copyright
  doc: "Copyright doc string...."
  attrs:
    - name: text
      doc: "External URLs for this context."
      return: str
      
    - name: type
      doc: "The type of copyright: C = the copyright, P = the sound recording (performance) copyright."
      return: str
      
        

# 8. CurrentlyPlayingContextObject
# 
- name: CurrentlyPlayingContext
  doc: "CurrentlyPlayingContext doc string...."
  attrs:
    - name: actions
      doc: "Allows to update the user interface based on which playback actions are available within the current context."
      return: DisallowsObject
      
    - name: context
      doc: "A Context Object. Can be None."
      return: Optional[ContextObject]
      
    - name: currently_playing_type
      doc: "The object type of the currently playing item. Can be one of track, episode, ad or unknown."
      return: str
      
    - name: device
      doc: "The device that is currently active."
      return: DeviceObject

    - name: is_playing
      doc: "If something is currently playing, return true."
      return: bool
      
    - name: item
      doc: "The currently playing track or episode. Can be None."
      return: Union[TrackObject, EpisodeObject, None]    
      
    - name: progress_ms
      doc: "Progress into the currently playing track or episode. Can be null."
      return: Optional[int]
      
    - name: repeat_state
      doc: "off, track, context"
      return: str
      
    - name: shuffle_state
      doc: "If shuffle is on or off."
      return: str
      
    - name: timestamp
      doc: "Unix Millisecond Timestamp when data was fetched."
      return: int 
      

# 9. CurrentlyPlayingObject
# 
- name: CurrentlyPlaying
  doc: "CurrentlyPlaying doc string...."
  attrs:
    - name: context
      doc: "A Context Object. Can be None."
      return: Optional[ContextObject]
      
    - name: currently_playing_type
      doc: "The object type of the currently playing item. Can be one of track, episode, ad or unknown."
      return: str

    - name: is_playing
      doc: "If something is currently playing, return true."
      return: bool
      
    - name: item
      doc: "The currently playing track or episode. Can be None."
      return: Union[TrackObject, EpisodeObject, None]    
      
    - name: progress_ms
      doc: "Progress into the currently playing track or episode. Can be null."
      return: Optional[int]
      
    - name: timestamp
      doc: "Unix Millisecond Timestamp when data was fetched."
      return: int 
      
      

# 10. CursorObject
# 
- name: Cursor
  doc: "CursorObject doc string.."
  attrs:
    - name: after
      doc: "The cursor to use as key to find the next page of items."
      return: str
      

# 11. CursorPagingObject
# 
- name: CursorPaging
  doc: "CursorPagingObject doc string..."
  attrs:
    - name: cursors
      doc: "The cursors used to find the next set of items."
      return: CursorObject
      
    - name: href
      doc: "A link to the Web API endpoint returning the full result of the request."
      return: str

    - name: items
      doc: "The requested data."
      return: List[SpotifyObject]
      
    - name: limit
      doc: "The maximum number of items in the response (as set in the query or by default)."
      return: int   
      
    - name: next
      doc: "URL to the next page of items. (Returns None if this is the last page)"
      return: Optional[str]
      
    - name: total
      doc: "Unix Millisecond Timestamp when data was fetched."
      return: int 
      

# 12. DeviceObject
# 
- name: Device
  doc: "DeviceObject doc string..."
  attrs:
    - name: id
      doc: "The device ID. This may be None."
      return: Optional[str]
      
    - name: is_active
      doc: "If this device is the currently active device."
      return: bool

    - name: is_private_session
      doc: "If this device is currently in a private session."
      return: bool
      
    - name: is_restricted
      doc: 'Whether controlling this device is restricted. At present if this is “true” then no Web API commands will be accepted by this device.'
      return: bool
      
    - name: name
      doc: "The name of the device."
      return: str
      
    - name: type
      doc: 'Device type, such as “computer”, “smartphone” or “speaker”.'
      return: str
      
    - name: volume_percent
      doc: "The current volume in percent. This may be None."
      return: Optional[int]
        
# 13. DevicesObject
# 
- name: Devices
  doc: "DevicesObject doc string..."
  attrs:
    - name: devices
      doc: "A list of 0..n Device objects"
      return: List[DeviceObject]

# 14. DisallowsObject
# 
- name: Disallows
  doc: "DisallowsObject doc string..."
  attrs:
    - name: interrupting_playback
      doc: "Interrupting playback. Optional field."
      return: Optional[bool]
      
    - name: pausing
      doc: "Pausing. Optional field."
      return: Optional[bool]
      
    - name: resuming
      doc: "Resuming. Optional field."
      return: Optional[bool]

    - name: seeking
      doc: "Seeking playback location. Optional field."
      return: Optional[bool]
      
    - name: skipping_next
      doc: 'Skipping to the next context. Optional field.'
      return: Optional[bool]
      
    - name: skipping_prev
      doc: "Skipping to the previous context. Optional field."
      return: Optional[bool]
      
    - name: toggling_repeat_context
      doc: 'Toggling repeat context flag. Optional field.'
      return: Optional[bool]
      
    - name: toggling_repeat_track
      doc: "Toggling repeat track flag. Optional field."
      return: Optional[bool]
      
    - name: toggling_shuffle
      doc: 'Toggling shuffle flag. Optional field.'
      return: Optional[bool]
      
    - name: transferring_playback
      doc: "Transferring playback between devices. Optional field."
      return: Optional[bool]


# 15. EpisodeObject
# 
- name: Episode
  doc: "EpisodeObject doc string..."
  attrs:
    - name: audio_preview_url
      doc: "A URL to a 30 second preview (MP3 format) of the episode. None if not available."
      return: Optional[str]
      
    - name: description
      doc: "A description of the episode."
      return: str
      
    - name: duration_ms
      doc: "The episode length in milliseconds."
      return: int

    - name: explicit
      doc: "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown)."
      return: bool
      
    - name: external_urls
      doc: 'External URLs for this episode.'
      return: ExternalUrlObject
      
    - name: href
      doc: "A link to the Web API endpoint providing full details of the episode."
      return: str
      
    - name: id
      doc: 'The Spotify ID for the episode..'
      return: str
      
    - name: images
      doc: "The cover art for the episode in various sizes, widest first."
      return: List[ImageObject]
      
    - name: is_externally_hosted
      doc: 'True if the episode is hosted outside of Spotify’s CDN.'
      return: bool
      
    - name: is_playable
      doc: "True if the episode is playable in the given market. Otherwise false."
      return: bool
      
    - name: languages
      doc: "A list of the languages used in the episode, identified by their ISO 639 code."
      return: List[str]
      
    - name: name
      doc: "The name of the episode."
      return: str

    - name: release_date
      doc: 'The date the episode was first released, for example "1981-12-15". Depending on the precision, it might be shown as "1981" or "1981-12".'
      return: str
      
    - name: relase_data_precision
      doc: 'The precision with which release_date value is known: "year", "month", or "day".'
      return: str
      
    - name: resume_point
      doc: "The user’s most recent position in the episode. Set if the supplied access token is a user token and has the scope user-read-playback-position."
      return: Optional[ResumePointObject]
      
    - name: show
      doc: 'The show on which the episode belongs.'
      return: SimplifiedShowObject
      
    - name: type
      doc: 'The object type: “episode”.'
      return: str
      
    - name: uri
      doc: 'The Spotify URI for the episode.'
      return: str
        
# 16. ErrorObject
# 
- name: Error
  doc: "ErrorObject doc string..."
  attrs:
    - name: message
      doc: "A short description of the cause of the error."
      return: str

    - name: status
      doc: "The HTTP status code."
      return: int
      
        
        
# 17. ExplicitContentSettingsObject
# 
- name: ExplicitContentSettings
  doc: "ExplicitContentSettings doc string..."
  attrs:
    - name: filter_enabled
      doc: "When true, indicates that explicit content should not be played."
      return: bool

    - name: filter_locked
      doc: "When true, indicates that the explicit content setting is locked and can’t be changed by the user."
      return: bool
      
      
        
        
# 18. ExternalIdObject
# 
- name: ExternalId
  doc: "ExternalIdObject doc string..."
  attrs:
    - name: ean
      doc: "International Article Number."
      return: str

    - name: isrc
      doc: "International Standard Recording Code."
      return: str
      
    - name: upc
      doc: "Universal Product Code."
      return: str
      
       
# 19. ExternalIdObject
# 
- name: ExternalId
  doc: "ExternalIdObject doc string..."
  attrs:
    - name: ean
      doc: "International Article Number."
      return: str

    - name: isrc
      doc: "International Standard Recording Code."
      return: str
      
    - name: upc
      doc: "Universal Product Code."
      return: str